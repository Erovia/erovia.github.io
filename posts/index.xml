<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Erovia&#39;s QMK Corner</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Erovia&#39;s QMK Corner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My personal workflow for QMK</title>
      <link>/posts/workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/workflow/</guid>
      <description>Let&amp;rsquo;s be honest, git can be intimidating.
While it&amp;rsquo;s true that git is an extremely powerful tool, most users can get by with only using a handful of subcommands.
I recommend the book Pro Git for everyone really interesed in git.
So, let&amp;rsquo;s see how I usually handle my QMK stuff, while keeping them up-to-date, too.
Every command need to be executed from your qmk_firmware directory!
 Setting things up This part you only need to do once.</description>
    </item>
    
    <item>
      <title>Testing Pull Requests</title>
      <link>/posts/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/testing/</guid>
      <description>Why? Let&amp;rsquo;s face it, testing new features, bug fixes, etc is time consuming.
But you can help.
While it&amp;rsquo;s true that ultimately the Collaborators decide on things, any feedback is greatly appreciated and can help the whole project move forward.
Knowing how to test PRs also allows you to use the stuff in them even before they get merged.
How? It&amp;rsquo;s actually quite easy, but assuming you are familiar with git and how its branching works at the basic level.</description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>/posts/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/contributing/</guid>
      <description>This is a pretty basic and easy to understand workflow to work on keyboards, keymaps, features or anything in general that you intend to get merged.
For things that&amp;rsquo;s for your personal use only, check out my general workflow.
One of the best things about git is it&amp;rsquo;s branching. It&amp;rsquo;s fast and allows us to experiment without risking our code.
First things first, read the official QMK Contributor guidelines in its entirety.</description>
    </item>
    
  </channel>
</rss>
